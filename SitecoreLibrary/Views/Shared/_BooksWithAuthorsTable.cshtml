@model PagedList.IPagedList<SitecoreLibrary.Models.BooksWithAuthor>

<table id="SearchResults" class="table table.bordered table-hover">
    <tr>
        <th>
            @Html.ActionLink("Author Name", "GetAllBookAuthorDetails", new { sortOrder = ViewBag.AuthorSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
            
        <th>
            @Html.ActionLink("Book Name", "GetAllBookAuthorDetails", new { sortOrder = ViewBag.BookSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        
        <th>
            Modification
        </th>
        
        <th>
            @{
                if (Request.IsAuthenticated)
                {   
                    @Html.Label("Book status")
                }
            }
        </th>

    </tr>

    @foreach (var item in Model)
    {
        @Html.HiddenFor(model => item.Id)
        <tr>

            <td>
                @Html.DisplayFor(model => item.FullName)
            </td>

            <td>
                @Html.ActionLink(item.BookName, "BookHistory", new {bookId = item.Id})
            </td>

            <td>
                @Html.ActionLink("Edit", "EditBookWithAuthorDetails", new { id = item.Id }) |
                @Html.ActionLink("Delete", "DeleteBookWithAuthor", new { id = item.Id }, new { onclick = "return confirm('Are you sure about delete?');" })
            </td>

            <td>
                @{
                    if (Request.IsAuthenticated && !item.IsTaken)
                    {
                        @Html.ActionLink("Take book", "TakeBookWithUser",
                            new { bookId = item.Id,
                                bookName = item.BookName,
                                userId = (Guid)(Membership.GetUser().ProviderUserKey),
                                eMail = Membership.GetUser().Email },
                            new { onclick = "return confirm('Do you really want to take this book?');" })
                    }
                    else if (Request.IsAuthenticated && item.TakenByUserId == (Guid)(Membership.GetUser().ProviderUserKey))
                    {
                        @Html.ActionLink("Return book", "ReturnBookWithUser",
                            new { bookId = item.Id ,
                                bookName = item.BookName,
                                eMail = Membership.GetUser().Email },
                            new { onclick = "return confirm('Do you really want to take this book?');" })
                    }
                }
            </td>
        </tr>
    }
</table>
