@model IEnumerable<SitecoreLibrary.Models.BooksWithAuthor>

<p>
    @Html.ActionLink("Add New Book", "AddBookWithAuthor")
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FullName)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.BookName)
        </th>
        
    </tr>

    @foreach (var item in Model)
    {
        @Html.HiddenFor(model => item.Id)
        <tr>

            <td>
                @Html.DisplayFor(model => item.FullName)
            </td>

            <td>
                @Html.DisplayFor(model => item.BookName)
            </td>

            <td>
                @Html.ActionLink("Edit", "EditBookWithAuthorDetails", new {id = item.Id}) |
                @Html.ActionLink("Delete", "DeleteBookWithAuthor", new {id = item.Id}, new {onclick = "return confirm('Are you sure about delete?');"})
            </td>

            <td>
                @{
                    if (Request.IsAuthenticated && !item.IsTaken)
                    {
                        @Html.ActionLink("Take book", "TakeBookWithUser", new { bookId = item.Id, userId = (Guid) (Membership.GetUser().ProviderUserKey)}, new {onclick = "return confirm('Do you really want to take this book?');"})
                    }
                    else if (Request.IsAuthenticated && item.TakenByUserId == (Guid) (Membership.GetUser().ProviderUserKey))
                    {
                        @Html.ActionLink("Return book", "ReturnBookWithUser", new { bookId = item.Id }, new {onclick = "return confirm('Do you really want to take this book?');"})
                    }
                }
            </td>
        </tr>
    }
</table>